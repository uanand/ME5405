function scaleImg = imageScale(img,targetRow,targetCol,method='nearestNeighbor')
    [row,col] = size(img);
    scaleImg = zeros(targetRow,targetCol,"uint8");
    
    scaleMat = [double(targetRow)/double(row),0;0,double(targetCol)/double(col)];
    invScaleMat = inv(scaleMat);
    
    if (strcmp(method,'nearestNeighbor'))
        padImg = double(img);
    elseif (strcmp(method,'bilinear'))
        padImg = double([img;img(row,:)]);
        padImg = [padImg padImg(:,col)];
    elseif (strcmp(method,'bicubic'))
        padImg = double([img(1,:);img;img(row,:);img(row-1,:)]);
        padImg = [padImg(:,1) padImg padImg(:,col) padImg(:,col-1)];
    endif
    for r = 1:targetRow
        for c = 1:targetCol
            r1 = max(1,invScaleMat(1,1)*r);
            c1 = max(1,invScaleMat(2,2)*c);
            if (strcmp(method,'nearestNeighbor'))
                scaleImg(r,c) = img(round(r1),round(c1));
            elseif (strcmp(method,'bilinear'))
                floor_r1 = max(1,floor(r1)); floor_c1 = max(1,floor(c1));
                scaleImg(r,c) = round(...
                padImg(floor_r1+0,floor_c1+0)*(floor(r1)+1-r1)*(floor(c1)+1-c1) + ...
                padImg(floor_r1+0,floor_c1+1)*(floor(r1)+1-r1)*(c1-floor(c1)+0) + ...
                padImg(floor_r1+1,floor_c1+0)*(r1-floor(r1)+0)*(floor(c1)+1-c1) + ...
                padImg(floor_r1+1,floor_c1+1)*(r1-floor(r1)+0)*(c1-floor(c1)+0));
            elseif (strcmp(method,'bicubic'))
                r1 = r1+1;
                c1 = c1+1;
                scaleImg(r,c) = round(...
                padImg(floor(r1)-1,floor(c1)-1)*weight_h3(floor(r1)+2,r1)*weight_h3(floor(c1)+2,c1) + ...
                padImg(floor(r1)-1,floor(c1)+0)*weight_h3(floor(r1)+2,r1)*weight_h3(floor(c1)+1,c1) + ...
                padImg(floor(r1)-1,floor(c1)+1)*weight_h3(floor(r1)+2,r1)*weight_h3(floor(c1)+0,c1) + ...
                padImg(floor(r1)-1,floor(c1)+2)*weight_h3(floor(r1)+2,r1)*weight_h3(floor(c1)-1,c1) + ...
                ...
                padImg(floor(r1)+0,floor(c1)-1)*weight_h3(floor(r1)+1,r1)*weight_h3(floor(c1)+2,c1) + ...
                padImg(floor(r1)+0,floor(c1)+0)*weight_h3(floor(r1)+1,r1)*weight_h3(floor(c1)+1,c1) + ...
                padImg(floor(r1)+0,floor(c1)+1)*weight_h3(floor(r1)+1,r1)*weight_h3(floor(c1)+0,c1) + ...
                padImg(floor(r1)+0,floor(c1)+2)*weight_h3(floor(r1)+1,r1)*weight_h3(floor(c1)-1,c1) + ...
                ...
                padImg(floor(r1)+1,floor(c1)-1)*weight_h3(floor(r1)+0,r1)*weight_h3(floor(c1)+2,c1) + ...
                padImg(floor(r1)+1,floor(c1)+0)*weight_h3(floor(r1)+0,r1)*weight_h3(floor(c1)+1,c1) + ...
                padImg(floor(r1)+1,floor(c1)+1)*weight_h3(floor(r1)+0,r1)*weight_h3(floor(c1)+0,c1) + ...
                padImg(floor(r1)+1,floor(c1)+2)*weight_h3(floor(r1)+0,r1)*weight_h3(floor(c1)-1,c1) + ...
                ...
                padImg(floor(r1)+2,floor(c1)-1)*weight_h3(floor(r1)-1,r1)*weight_h3(floor(c1)+2,c1) + ...
                padImg(floor(r1)+2,floor(c1)+0)*weight_h3(floor(r1)-1,r1)*weight_h3(floor(c1)+1,c1) + ...
                padImg(floor(r1)+2,floor(c1)+1)*weight_h3(floor(r1)-1,r1)*weight_h3(floor(c1)+0,c1) + ...
                padImg(floor(r1)+2,floor(c1)+2)*weight_h3(floor(r1)-1,r1)*weight_h3(floor(c1)-1,c1));
            endif
        endfor
    endfor
endfunction

function w = weight_h3(x,y)
    d = abs(x-y);
    if (d<=1)
        w = 1 - 2*d^2 + d^3;
    elseif (d>1 && d<2)
        w = 4 - 8*d + 5*d^2 - d^3;
    else
        w = 0;
    endif
endfunction
